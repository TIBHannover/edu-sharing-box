---
- name: Ensure notification directory exists.
  file:
    path: "{{notification_service_install_dir}}"
    state: directory
  tags:
    - edu-sharing-plugin-mongo

- name: Download compose file.
  get_url:
    force: yes
    url: "{{ repository_plugin_mongo_deploy_docker_compose }}"
    dest: "{{ plugin_mongo_service_install_dir }}/{{ repository_plugin_mongo_deploy_docker_compose | basename }}"
  tags:
    - edu-sharing-plugin-mongo

- name: Extract docker files.
  become: true
  unarchive:
    remote_src: yes
    src: "{{ plugin_mongo_service_install_dir }}/{{ repository_plugin_mongo_deploy_docker_compose | basename }}"
    dest: "{{plugin_mongo_service_install_dir}}"
  tags:
    - edu-sharing-plugin-mongo

- name: Copy .env file file.
  template:
    src: .env.j2
    dest: "{{plugin_mongo_service_install_dir}}/.env"
  tags: 
    - edu-sharing-plugin-mongo

- name: Copy deploy shell script file.
  template:
    src: deploy.sh.j2
    dest: "{{plugin_mongo_service_install_dir}}/deploy.sh"
    mode: "a+x"
  tags: 
    - edu-sharing-plugin-mongo

- name: Get the network name of a container based on a pattern
  shell: |
    sg docker -c "docker inspect --format '{{ '{{json ' }}.NetworkSettings.Networks{{ '}}' }}'  $(sg docker -c "docker ps --filter 'name=repository-service_' --format '{{ '{{' }}.Names{{ '}}' }}' | head -n 1 ") | jq -r 'keys[]'"
  register: repository_service_docker_network_name
  ignore_errors: true
  tags:
    - edu-sharing-plugin-mongo

- name: Copy override file.
  template:
    src: 3_plugin-mongo-override-common.yml.j2
    dest: "{{plugin_mongo_service_install_dir}}/3_plugin-mongo-override-common.yml"
  vars:
    edu_sharing_docker_network_name: "{{repository_service_docker_network_name.stdout}}"
  tags: 
    - edu-sharing-plugin-mongo

- name: Run Plugin Mongo service.
  shell:
    chdir: "{{plugin_mongo_service_install_dir}}/"
    cmd: '{{mongo_plugin_service_deploy_command | default(''sg docker -c "./deploy.sh start"'',true)}}'
  tags: 
    - edu-sharing-plugin-mongo
