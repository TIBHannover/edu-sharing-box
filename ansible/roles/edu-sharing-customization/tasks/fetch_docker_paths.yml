- name: Get the path to the edu-sharing config-cluster docker volume.
  shell: |
    sg docker -c "docker volume inspect --format '{{ '{{' }}.Mountpoint{{ '}}' }}'  $(sg docker -c "docker volume ls -q |grep '_repository-service-volume-config-cluster'")"
  register: repository_volume_config_cluster_path
  ignore_errors: true
  tags:
    - edu-sharing-cluster

- name: Get the path to the edu-sharing config-edu-sharing docker volume.
  shell: |
    sg docker -c "docker volume inspect --format '{{ '{{' }}.Mountpoint{{ '}}' }}'  $(sg docker -c "docker volume ls -q |grep '_repository-service-volume-config-edu-sharing'")"
  register: repository_config_edu_sharing_path
  ignore_errors: true
  tags:
    - edu-sharing-config

- name: Get the path to the edu-sharing config-node docker volume.
  shell: |
    sg docker -c "docker volume inspect --format '{{ '{{' }}.Mountpoint{{ '}}' }}'  $(sg docker -c "docker volume ls -q |grep '_repository-service-volume-config-node'")"
  register: repository_volume_config_node_path
  ignore_errors: true
  tags:
    - edu-sharing-config-node

- name: Store variable globally.
  set_fact:
    repository_volume_config_cluster_path: "{{ repository_volume_config_cluster_path }}"
    repository_config_edu_sharing_path: "{{ repository_config_edu_sharing_path }}"
    repository_volume_config_node_path: "{{ repository_volume_config_node_path}}"
  when: store_docker_paths_globally | default(false) | bool

- name: Merge default and extra required paths, ensuring no duplicates
  set_fact:
    merged_paths: >
      {{
        [
          repository_volume_config_cluster_path.stdout ~ '/applications/homeApplication.properties.xml',
          repository_volume_config_cluster_path.stdout ~ '/applications/ccapp-registry.properties.xml',
          repository_volume_config_node_path.stdout ~ '/defaults/client.config.xml'
        ]
        + (extra_required_paths | default([]))
      | unique }}

- name: Debug Paths
  debug:
    var: merged_paths

- name: Wait until all required files are generated by docker container (custom and default).
  become: true
  wait_for:
    path: "{{ item }}"
    state: present
  retries: 10
  delay: 10
  loop: "{{ merged_paths }}"
  when: merged_paths | length > 0
