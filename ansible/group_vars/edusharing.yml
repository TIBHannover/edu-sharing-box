---
es_proxy_vhost: true


edu_sharing_docker_project_name: "edu_sharing_docker_version"

alfresco_db:
  name: alfresco
  user: alfresco
  password: alfresco

connect_content_pixabay: false
pixabay_apikey: CHANGE_ME

connect_content_youtube: false
youtube_apikey: CHANGE_ME

connect_content_oersi: true  # activate / deactivate feature 'OERSI connection' (available from edu-sharing 6.0)

edu_inst_dir: "{{base_dir}}/edu-sharing_{{edu_version}}"
edu_home: "{{edu_inst_dir}}/edu-sharing"

edu_repo_caption: local-repo-vmtest
edu_repo_id: local

# the receiver address where to send mails
edu_mail_report_receiver:
# the encryption used to send mails, at the moment only "tls" or none (blank) is supported
edu_mail_authtype: tls
edu_mail_smtp_server:
# the credentials on the mail server needed to send mails, leave blank if not needed
edu_mail_smtp_username:
edu_mail_smtp_passwd:
# the mail server port
edu_mail_smtp_port: 25
# the sender address used to send mails
edu_mail_smtp_from: pleasechange@nodomain.com

edu_imprinturl:
edu_privacyInformationUrl:
edu_license_mandatory: "false"   # | "false"
edu_author_mandatory: "false"   # | "false"
edu_workspace_viewType:   # 'tile' | 'list'
edu_upload_post_dialog: 'SimpleEdit'  # 'SimpleEdit' | 'Mds'
# set to "true" to enable local registration of users
edu_register_local: "false"
edu_recover_url:  # URL to reset password
edu_banner_url:
# set a href to enable Homebutton on banner image  e.g http://wwww.your-domain/edu-sharing/
edu_banner_href:
edu_banner_components:
  - search
# list of main menus to be hidden
# example:
# edu_hidden_menus:
#  - 'search'
#  - 'collections'
edu_hide_main_menus:
# path to a custom banner that will be copied into the edu-sharing instance
edu_banner_path:
edu_logo_path:
# a list of custom images that should be copied into edu_sharing/assets/images; format of each entry: [<source-file-path>, <destination under edu_sharing/assets/images>]
# example: ['local/path/example.svg', 'example.svg']
edu_custom_images:
edu_mds_override_paths:
edu_valuespaces_paths:
edu_valuespaces_i18n_paths:
# List of email template you want to override.
edu_sharing_mail_templates_override:
# a list of adjustments; format of each entry: [<i18n-file-path>, <KEY>, <NEW-VALUE>]
# example: ['common/de.json', 'USER_TUTORIAL_HEADING', 'Profil']
edu_i18n_adjustments:
# a list of additional help menu items; format of each entry: [<key>, <icon>, <url>]
edu_help_menu_options:
# a (string-)list of allowed licenses ("NONE","CC_0","CC_BY","SCHULFUNK","UNTERRICHTS_UND_LEHRMEDIEN","COPYRIGHT","CUSTOM")
edu_allowed_licenses:

edu_sharing_port:
edu_sharing_protocol: http

edu_enable_statistics_api: "false"

mirror_vocabularies: # list of vocabularies a local mirror should be created for (url - url of the source, target_directory - directory where the mirror should be stored)
#  - url: "https://w3id.org/kim/hochschulfaechersystematik/scheme.json"
#    target_directory: "/var/www/oer/vocabs-mirror"
#  - url: "https://w3id.org/kim/hcrt/scheme.json"
#    target_directory: "/var/www/oer/vocabs-mirror"

edu_migration_replace_mapping: # replace mapping jobs that should be executed during edu-sharing update (startFolder - root node, property - property that should be migrated, data - csv mapping)
#  - startFolder: 869665e9-7e42-49af-bd30-6469e59904c5
#    property: ccm:taxonid
#    data: "{{ lookup('file', 'esconf/migration/mapping_taxonid.csv') }}"

# define custom adjustments here to the ccContentModel.xml under tomcat/shared/classes/alfresco/extension/model/
# use the mapping 'ns' for the namespace "http://www.alfresco.org/model/dictionary/1.0" in the xpath
# format:
#   path        - path to file where you want to add or modify the property 
#   xpath       - xpath where to set the value (has to include the mapping-key of the namespace-mapping)
#   value       - value to set
edu_cccontentmodel_adjustments:
#  - path: "model/ccContentModel.xml"
#    xpath: "/ns:model/ns:types/ns:type[@name='cm:person']/ns:properties/ns:property[@name='cm:sizeQuota']/ns:default"
#    value: "524288000" # sizeQuota in Bytes (500MB)



# define a custom property here to ccmodel.xml under tomcat/shared/classes/alfresco/extensions/ccmodel.xml
# ----------------------- example -------------------------------
# <property name='namespace:name_property'>   example ccm:customType
#   <type>d:text</type>
#   <multiple>false</multiple>
#   <index enabled='true'>
#     <atomic>true</atomic>
#     <tokenised>false</tokenised>
#   </index>
# </property>
# -----------------------------------------------------
#   path       - path to file where you want to add or modify the property
#   xpath       - xpath where to set the value (has to include the mapping-key of the namespace-mapping)
#   properties:  - list of properties that should be added
#     - property: 
#         name: "ccm:example"
#          _:
#            - type: "d:text"
#            - multiple: "false"
#            - index: 
#               enabled: "true"
#               _: 
#               - atomic: "true"
#               - tokenised: "false" 

#  or as a string 
#   properties: 
#       - > 
#       <property name='ccm:inhaltstyp'>
#         <type>d:text</type>
#         <multiple>false</multiple>
#         <index enabled='true'>
#             <atomic>true</atomic>
#             <tokenised>false</tokenised>
#         </index>
#       </property>

alfresco_ccmodel_add_custom_properties:

#  define a list custom licenses,  
#  format: 
#     - name: "Apache" # Required
#       url: "https://opensource.org/licenses/Apache-2.0"  # Optional, since for now is not implemented in Edu-sharing
#       position: 1    # Optional, if empty will be added in the end of dropdown
#       description:   #short  Descriptions about the license, you can include the URL too
#         - ["en","Description in English"]
#         - ["de","Description in Deutsche "]
#       groups:  # Required
#       - ["en","APACHE LICENSE"]
#       - ["de","APACHE LIZENZ"]
#       image: "apache.svg"  # Required
# 
edu_custom_licenses:


# define config for classifications keywords
# activate the classification-keyword (true/false)
activate_classification_keywords: false
# activate the classification-keyword update (true/false)
activate_classification_keywords_update: false
# define the classification-keyword interval in days = 1 means every day
classification_keywords_update_interval: 15
# classification keyword default file 
edu_classification_keyword_path: "classification-keywords/classification-keywords.xml"


edu_connected_lms: # list of LMS configurations. Connect these LMS with edu-sharing (appid - id of the LMS, public_key - public key of the LMS (from the xml-file), host - public IP of the LMS)
#  - appid: ""
#    public_key: ""
#    host: ""



# Edu-sharing doesn't have a documentation for this yet, but I will write here some of property that can be used in the configuration
# if you need to know more about the properties, see the https://github.com/edu-sharing/Edu-Sharing/blob/develop/Backend/src/org/edu_sharing/alfresco/service/config/model/ContextMenuEntry.java
#  Additional custom menu items as an array with the following attributes
#  - position: "Position in menu, if negative value, count from end"
#  - icon : "Material icon"
#  - name : "Name of the entry, can also contain language strings"
#  - url : "Url when called (use :id for the node id) "
#  - path : "(Optional instead of url): Internal path (e.g. 'workspace')"
#  - scope : "(from 5.0) Specification of the scope to support highlighting depending on the environment (e.g. 'workspace')"
#  - isSeparate : "Should the menu item be separated (with a line above it) (optional)"
#  - isDisabled : "If true, the button is greyed out and has no function (optional)"
#  - onlyDesktop : "If true, the button is only shown on desktop (optional)"
#  - openInNew: "If true, the button opens in a new tab (optional)"
#  - onlyWeb: "Optional, default: false. If 'true' the entry will not be displayed in Cordova apps"

edu_custom_options: # list of custom options for the edu-sharing
    # - > 
    #     <customOptions>
    #         <group>View</group>
    #         <name>Im neuen Fenster Ã¶ffnen</name>
    #         <icon>open_in_new</icon>
    #         <openInNew>true</openInNew>
    #         <mode>nodes</mode>
    #         <isDirectory>false</isDirectory>
    #         <url>{{edu_sharing_url}}/components/render/:id</url>
    #     </customOptions>


# Define a list of jobs that should be executed on script run
#  Since doesn't have a documetation yet, in edu-sharing, you can find all the jobs in rest-api: https://{{base_Url}}/edu-sharing/rest/admin/v1/jobs/all
#  example:
#  - job_class: "org.edu_sharing.repository.server.jobs.quartz.TrashcanCleanerJob"
#    parameters:
#      - timeToKeep: "30" # in days ex. keep last 30 days
#        batchSize:  "5000" # how many nodes should be run in one batch
edu_system_jobs: # list of system jobs.

# Define a list of custom menus that should be added to the edu-sharing main menu
# if you need to know more about the properties, see: ../ansible/roles/edu-sharing/tasks/custom_menu_entries.yml
edu_custom_menu_entries: # list of custom menu entries
    # - name: "SIDEBAR.EXAMPLE"
    #   scope: "workspace"
    #   labels:
    #     - ["en","EXAMPLE Search"]
    #     - ["de","EXAMPLE Suche"]
    #   icon: "open_in_new"
    #   position: 2
    #   openInNew: true
    #   url: "https://www.example.de/"

# Enable modules for edu-sharing connector 
# example:
#     - id: 'TINYMCE'       # Required
#       icon: 'edit'        # optional default will be edit
#       showNew: true       # optional default will be true
#       onlyDesktop: true   # optional default will be true
#       hasViewMode: true   # optional default will be true
#       filetypes:          # Required
#         - {mimetype: "text/html",filetype: "html",createable: true,editable: true,editorType: "tinymce"}
# TINYMCE is by default
edu_connector_enable_modules:
  - id: 'H5P'
    filetypes:
      - {mimetype: "application/zip",filetype: "h5p", ccressourcetype: "h5p", createable: true,editable: true}
  - id: 'ONLY_OFFICE'
    icon: 'edit'
    showNew: true
    onlyDesktop: true
    hasViewMode: true
    filetypes:
      - {mimetype: "application/vnd.openxmlformats-officedocument.wordprocessingml.document",filetype: "docx",createable: true,editable: true}
      - {mimetype: "application/vnd.openxmlformats-officedocument.presentationml.presentation",filetype: "pptx",createable: true,editable: true}
      - {mimetype: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",filetype: "xlsx",createable: true,editable: true}